name: yadism

on:
  push:
    branches:
      - master
      - "feature/*"
      - "release/*"
      - "benchmark/*"
      - "test/*"
  pull_request:
    # TODO: https://github.community/t5/GitHub-Actions/Triggering-workflow-on-merge/td-p/40930
    types:
      - closed
    branches:
      - master

jobs:
  # build is the <job_id>
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.8]
        include:
          - python-version: 3.8
            conda-py: 38
    env:
      CONDA_PY: ${{ matrix.conda-py }} # strange way to manage env vars inclusion

    steps:
      # checkout the repo on the github runner
      - uses: actions/checkout@v2
      # use an external action to setup miniconda
      #   - also setup a conda virtual environment named 'yadism'
      #
      # (in order to use the conda venv at each step you need to login with
      # 'bash -l {0}' in the 'shell' field, and to activate the environment)
      - uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          miniconda-version: "latest"
          activate-environment: yadism
          python-version: ${{ matrix.python-version }}
      # install lhapdf and apfel from the nnpdf conda repo
      - name: Install lhapdf and apfel with conda
        shell: bash -l {0}
        run: |
          conda activate yadism
          #
          conda config --add channels https://packages.nnpdf.science/conda
          conda install -y lhapdf
          conda install -y apfel
      # install the actual python package 'yadism'
      - name: Install yadism
        shell: bash -l {0}
        run: |
          conda activate yadism
          #
          pip install .
      - name: Prepare Test environment
        shell: bash -l {0}
        run: |
          conda activate yadism
          # download required data:
          # - install needed lhapdf PDFSets
          #lhapdf update
          #lhapdf get CT14llo_NF3
          # install packages needed for testing
          pip install -r test_requirements.txt
          # generate input db
          cd benchmarks/data
          python theory.py
          python observables.py
          cd ../..
      #  run the test with 'pytest'
      - name: Test yadism
        shell: bash -l {0}
        run: |
          conda activate yadism
          # run tests
          pytest -m quick_check benchmarks
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: benchmarks
          name: codecov-umbrella
          fail_ci_if_error: true
